// /_test_004/DirectoryFontLoader.qml
#include <QtQml/qqmlprivate.h>
#include <QtCore/qdatetime.h>
#include <QtCore/qobject.h>
#include <QtCore/qstring.h>
#include <QtCore/qstringlist.h>
#include <QtCore/qurl.h>
#include <QtCore/qvariant.h>
#include <QtQml/qjsengine.h>
#include <QtQml/qjsprimitivevalue.h>
#include <QtQml/qjsvalue.h>
#include <QtQml/qqmlcomponent.h>
#include <QtQml/qqmlcontext.h>
#include <QtQml/qqmlengine.h>
#include <QtQml/qqmllist.h>
#include <type_traits>
namespace QmlCacheGeneratedCode {
namespace _0x5f__test_004_DirectoryFontLoader_qml {
extern const unsigned char qmlData alignas(16) [];
extern const unsigned char qmlData alignas(16) [] = {

0x71,0x76,0x34,0x63,0x64,0x61,0x74,0x61,
0x3b,0x0,0x0,0x0,0x1,0x5,0x6,0x0,
0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,
0x90,0xa,0x0,0x0,0x36,0x31,0x37,0x36,
0x65,0x62,0x31,0x62,0x32,0x30,0x62,0x39,
0x33,0x34,0x66,0x34,0x39,0x37,0x66,0x62,
0x63,0x65,0x36,0x38,0x64,0x65,0x36,0x64,
0x35,0x37,0x34,0x31,0x37,0x34,0x66,0x35,
0x35,0x64,0x64,0x34,0x0,0x0,0x0,0x0,
0x0,0x0,0x0,0x0,0x62,0xe6,0x1a,0x15,
0x14,0xde,0x56,0xf0,0x74,0x45,0x9e,0x81,
0x9,0xbb,0x2,0x48,0x0,0x0,0x0,0x0,
0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,
0x0,0x0,0x0,0x0,0x23,0x0,0x0,0x0,
0x22,0x0,0x0,0x0,0xe8,0x3,0x0,0x0,
0x5,0x0,0x0,0x0,0xf8,0x0,0x0,0x0,
0x0,0x0,0x0,0x0,0xc,0x1,0x0,0x0,
0x0,0x0,0x0,0x0,0xc,0x1,0x0,0x0,
0x1,0x0,0x0,0x0,0xc,0x1,0x0,0x0,
0x10,0x0,0x0,0x0,0x10,0x1,0x0,0x0,
0x0,0x0,0x0,0x0,0x50,0x1,0x0,0x0,
0x1,0x0,0x0,0x0,0x50,0x1,0x0,0x0,
0x0,0x0,0x0,0x0,0x58,0x1,0x0,0x0,
0x0,0x0,0x0,0x0,0x58,0x1,0x0,0x0,
0x0,0x0,0x0,0x0,0x58,0x1,0x0,0x0,
0x0,0x0,0x0,0x0,0x58,0x1,0x0,0x0,
0x0,0x0,0x0,0x0,0x58,0x1,0x0,0x0,
0x0,0x0,0x0,0x0,0x58,0x1,0x0,0x0,
0x0,0x0,0x0,0x0,0x58,0x1,0x0,0x0,
0xff,0xff,0xff,0xff,0x0,0x0,0x0,0x0,
0x0,0x0,0x0,0x0,0xd0,0x8,0x0,0x0,
0x58,0x1,0x0,0x0,0xb8,0x1,0x0,0x0,
0x50,0x2,0x0,0x0,0xa0,0x2,0x0,0x0,
0xf8,0x2,0x0,0x0,0xd8,0x3,0x0,0x0,
0x43,0x1,0x0,0x0,0x73,0x0,0x0,0x0,
0x54,0x1,0x0,0x0,0x43,0x1,0x0,0x0,
0x43,0x0,0x0,0x0,0x74,0x1,0x0,0x0,
0x43,0x0,0x0,0x0,0x50,0x0,0x0,0x0,
0xc3,0x0,0x0,0x0,0xd0,0x1,0x0,0x0,
0xb3,0x0,0x0,0x0,0xe0,0x1,0x0,0x0,
0xf3,0x1,0x0,0x0,0xc3,0x0,0x0,0x0,
0x4,0x2,0x0,0x0,0x97,0x0,0x0,0x0,
0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,
0x44,0x0,0x0,0x0,0x16,0x0,0x0,0x0,
0x6,0x0,0x0,0x0,0x0,0x0,0x0,0x0,
0x38,0x0,0x0,0x0,0x0,0x0,0x0,0x0,
0x38,0x0,0x0,0x0,0x0,0x0,0x1,0x0,
0xff,0xff,0xff,0xff,0xc,0x0,0x0,0x0,
0xa,0x0,0x50,0x0,0x0,0x0,0x0,0x0,
0x0,0x0,0x7,0x0,0x0,0x0,0x0,0x0,
0x0,0x0,0x0,0x0,0xa,0x0,0x0,0x0,
0x1,0x0,0x0,0x0,0x2e,0x0,0x18,0x7,
0x12,0x16,0x18,0xb,0x2e,0x1,0x80,0xb,
0x18,0xa,0xac,0x2,0x7,0x1,0xa,0x18,
0x6,0x2,0x0,0x0,0x0,0x0,0x0,0x0,
0x70,0x0,0x0,0x0,0x25,0x0,0x0,0x0,
0x9,0x0,0x0,0x0,0x1,0x0,0x1,0x0,
0x38,0x0,0x0,0x0,0x0,0x0,0x0,0x0,
0x40,0x0,0x0,0x0,0x0,0x0,0x4,0x0,
0xff,0xff,0xff,0xff,0x11,0x0,0x0,0x0,
0xd,0x0,0x50,0x0,0x0,0x0,0x0,0x0,
0x0,0x0,0x9,0x0,0x0,0x0,0x0,0x0,
0xa,0x0,0x0,0x0,0x0,0x0,0x0,0x0,
0x0,0x0,0x0,0x0,0xe,0x0,0x0,0x0,
0x1,0x0,0x0,0x0,0x14,0x0,0x0,0x0,
0xf,0x0,0x0,0x0,0x1,0x0,0x0,0x0,
0x1c,0x0,0x0,0x0,0xe,0x0,0x0,0x0,
0x1,0x0,0x0,0x0,0x23,0x0,0x0,0x0,
0x11,0x0,0x0,0x0,0x1,0x0,0x0,0x0,
0x2e,0x3,0x18,0x9,0x12,0x18,0x18,0xf,
0x16,0x6,0x80,0xf,0x18,0x10,0x12,0x19,
0x80,0x10,0x18,0xc,0x2e,0x4,0x18,0xd,
0x12,0x1a,0x18,0xe,0xac,0x5,0x9,0x3,
0xc,0x18,0x8,0xe,0x2,0x0,0x0,0x0,
0x44,0x0,0x0,0x0,0x7,0x0,0x0,0x0,
0xe,0x0,0x0,0x0,0x0,0x0,0x0,0x0,
0x38,0x0,0x0,0x0,0x0,0x0,0x0,0x0,
0x38,0x0,0x0,0x0,0x0,0x0,0x1,0x0,
0xff,0xff,0xff,0xff,0x7,0x0,0x0,0x0,
0x15,0x0,0x90,0x0,0x0,0x0,0x0,0x0,
0x0,0x0,0x7,0x0,0x0,0x0,0x0,0x0,
0x0,0x0,0x0,0x0,0x15,0x0,0x0,0x0,
0x1,0x0,0x0,0x0,0x2e,0x6,0x3c,0x7,
0x18,0x6,0x2,0x0,0x0,0x0,0x0,0x0,
0x44,0x0,0x0,0x0,0xe,0x0,0x0,0x0,
0x10,0x0,0x0,0x0,0x0,0x0,0x0,0x0,
0x38,0x0,0x0,0x0,0x0,0x0,0x0,0x0,
0x38,0x0,0x0,0x0,0x0,0x0,0x1,0x0,
0xff,0xff,0xff,0xff,0x9,0x0,0x0,0x0,
0x16,0x0,0x90,0x0,0x0,0x0,0x0,0x0,
0x0,0x0,0x7,0x0,0x0,0x0,0x0,0x0,
0x0,0x0,0x0,0x0,0x16,0x0,0x0,0x0,
0x1,0x0,0x0,0x0,0x12,0x1b,0x18,0x7,
0x12,0x1c,0x18,0x8,0xe8,0x2,0x7,0x18,
0x6,0x2,0x0,0x0,0x0,0x0,0x0,0x0,
0x90,0x0,0x0,0x0,0x45,0x0,0x0,0x0,
0x13,0x0,0x0,0x0,0x0,0x0,0x0,0x0,
0x38,0x0,0x0,0x0,0x0,0x0,0x0,0x0,
0x38,0x0,0x0,0x0,0x0,0x0,0x7,0x0,
0xff,0xff,0xff,0xff,0x12,0x0,0x0,0x0,
0x19,0x0,0x90,0x0,0x1,0x0,0x0,0x0,
0x0,0x0,0x8,0x0,0x0,0x0,0x0,0x0,
0x0,0x0,0x0,0x0,0x19,0x0,0x0,0x0,
0x0,0x0,0x0,0x0,0x1,0x0,0x0,0x0,
0x1a,0x0,0x0,0x0,0x2,0x0,0x0,0x0,
0xf,0x0,0x0,0x0,0x1c,0x0,0x0,0x0,
0x6,0x0,0x0,0x0,0x1b,0x0,0x0,0x0,
0x1c,0x0,0x0,0x0,0x7,0x0,0x0,0x0,
0x1e,0x0,0x0,0x0,0x1d,0x0,0x0,0x0,
0x8,0x0,0x0,0x0,0x36,0x0,0x0,0x0,
0x1e,0x0,0x0,0x0,0x9,0x0,0x0,0x0,
0x41,0x0,0x0,0x0,0x20,0x0,0x0,0x0,
0x9,0x0,0x0,0x0,0x12,0x0,0x0,0x0,
0xca,0x2e,0x8,0x3c,0x9,0x18,0x8,0x2e,
0xa,0x3c,0xb,0x60,0x8,0x50,0x32,0x6,
0x18,0x7,0x1a,0x7,0x9,0x2e,0xc,0x68,
0x9,0x50,0x26,0x14,0x0,0x6,0x2e,0xd,
0x18,0xd,0x1a,0x7,0x10,0x12,0x21,0x18,
0x11,0xac,0xe,0xd,0x2,0x10,0x18,0xc,
0xb4,0xf,0x1,0xc,0x18,0x6,0x16,0x7,
0x76,0x18,0xa,0x7c,0x18,0x7,0x56,0x4c,
0xd1,0xd4,0x16,0x6,0x2,0x0,0x0,0x0,
0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,
0x0,0x0,0x0,0x0,0x10,0x0,0x0,0x0,
0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,
0x70,0x4,0x0,0x0,0x78,0x4,0x0,0x0,
0x90,0x4,0x0,0x0,0xc8,0x4,0x0,0x0,
0xe0,0x4,0x0,0x0,0xf8,0x4,0x0,0x0,
0x18,0x5,0x0,0x0,0x58,0x5,0x0,0x0,
0x88,0x5,0x0,0x0,0x98,0x5,0x0,0x0,
0xb0,0x5,0x0,0x0,0xc0,0x5,0x0,0x0,
0xe8,0x5,0x0,0x0,0x8,0x6,0x0,0x0,
0x20,0x6,0x0,0x0,0x50,0x6,0x0,0x0,
0x70,0x6,0x0,0x0,0xb0,0x6,0x0,0x0,
0xc8,0x6,0x0,0x0,0xf0,0x6,0x0,0x0,
0x38,0x7,0x0,0x0,0x48,0x7,0x0,0x0,
0x68,0x7,0x0,0x0,0x90,0x7,0x0,0x0,
0xb8,0x7,0x0,0x0,0x18,0x8,0x0,0x0,
0x28,0x8,0x0,0x0,0x50,0x8,0x0,0x0,
0x60,0x8,0x0,0x0,0x70,0x8,0x0,0x0,
0x88,0x8,0x0,0x0,0x98,0x8,0x0,0x0,
0xa8,0x8,0x0,0x0,0xb8,0x8,0x0,0x0,
0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,
0x7,0x0,0x0,0x0,0x51,0x0,0x74,0x0,
0x51,0x0,0x75,0x0,0x69,0x0,0x63,0x0,
0x6b,0x0,0x0,0x0,0x0,0x0,0x0,0x0,
0x17,0x0,0x0,0x0,0x51,0x0,0x74,0x0,
0x2e,0x0,0x6c,0x0,0x61,0x0,0x62,0x0,
0x73,0x0,0x2e,0x0,0x66,0x0,0x6f,0x0,
0x6c,0x0,0x64,0x0,0x65,0x0,0x72,0x0,
0x6c,0x0,0x69,0x0,0x73,0x0,0x74,0x0,
0x6d,0x0,0x6f,0x0,0x64,0x0,0x65,0x0,
0x6c,0x0,0x0,0x0,0x0,0x0,0x0,0x0,
0x8,0x0,0x0,0x0,0x51,0x0,0x74,0x0,
0x4f,0x0,0x62,0x0,0x6a,0x0,0x65,0x0,
0x63,0x0,0x74,0x0,0x0,0x0,0x0,0x0,
0x6,0x0,0x0,0x0,0x6c,0x0,0x6f,0x0,
0x61,0x0,0x64,0x0,0x65,0x0,0x72,0x0,
0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,
0xd,0x0,0x0,0x0,0x66,0x0,0x6f,0x0,
0x6e,0x0,0x74,0x0,0x44,0x0,0x69,0x0,
0x72,0x0,0x65,0x0,0x63,0x0,0x74,0x0,
0x6f,0x0,0x72,0x0,0x79,0x0,0x0,0x0,
0x1c,0x0,0x0,0x0,0x65,0x0,0x78,0x0,
0x70,0x0,0x72,0x0,0x65,0x0,0x73,0x0,
0x73,0x0,0x69,0x0,0x6f,0x0,0x6e,0x0,
0x20,0x0,0x66,0x0,0x6f,0x0,0x72,0x0,
0x20,0x0,0x66,0x0,0x6f,0x0,0x6e,0x0,
0x74,0x0,0x44,0x0,0x69,0x0,0x72,0x0,
0x65,0x0,0x63,0x0,0x74,0x0,0x6f,0x0,
0x72,0x0,0x79,0x0,0x0,0x0,0x0,0x0,
0x15,0x0,0x0,0x0,0x72,0x0,0x65,0x0,
0x6c,0x0,0x61,0x0,0x74,0x0,0x69,0x0,
0x76,0x0,0x65,0x0,0x46,0x0,0x6f,0x0,
0x6e,0x0,0x74,0x0,0x44,0x0,0x69,0x0,
0x72,0x0,0x65,0x0,0x63,0x0,0x74,0x0,
0x6f,0x0,0x72,0x0,0x79,0x0,0x0,0x0,
0x5,0x0,0x0,0x0,0x66,0x0,0x6f,0x0,
0x6e,0x0,0x74,0x0,0x73,0x0,0x0,0x0,
0x8,0x0,0x0,0x0,0x6c,0x0,0x6f,0x0,
0x61,0x0,0x64,0x0,0x46,0x0,0x6f,0x0,
0x6e,0x0,0x74,0x0,0x0,0x0,0x0,0x0,
0x3,0x0,0x0,0x0,0x75,0x0,0x72,0x0,
0x6c,0x0,0x0,0x0,0x0,0x0,0x0,0x0,
0xf,0x0,0x0,0x0,0x46,0x0,0x6f,0x0,
0x6c,0x0,0x64,0x0,0x65,0x0,0x72,0x0,
0x4c,0x0,0x69,0x0,0x73,0x0,0x74,0x0,
0x4d,0x0,0x6f,0x0,0x64,0x0,0x65,0x0,
0x6c,0x0,0x0,0x0,0x0,0x0,0x0,0x0,
0xb,0x0,0x0,0x0,0x66,0x0,0x6f,0x0,
0x6c,0x0,0x64,0x0,0x65,0x0,0x72,0x0,
0x4d,0x0,0x6f,0x0,0x64,0x0,0x65,0x0,
0x6c,0x0,0x0,0x0,0x0,0x0,0x0,0x0,
0x6,0x0,0x0,0x0,0x66,0x0,0x6f,0x0,
0x6c,0x0,0x64,0x0,0x65,0x0,0x72,0x0,
0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,
0x15,0x0,0x0,0x0,0x65,0x0,0x78,0x0,
0x70,0x0,0x72,0x0,0x65,0x0,0x73,0x0,
0x73,0x0,0x69,0x0,0x6f,0x0,0x6e,0x0,
0x20,0x0,0x66,0x0,0x6f,0x0,0x72,0x0,
0x20,0x0,0x66,0x0,0x6f,0x0,0x6c,0x0,
0x64,0x0,0x65,0x0,0x72,0x0,0x0,0x0,
0xb,0x0,0x0,0x0,0x6e,0x0,0x61,0x0,
0x6d,0x0,0x65,0x0,0x46,0x0,0x69,0x0,
0x6c,0x0,0x74,0x0,0x65,0x0,0x72,0x0,
0x73,0x0,0x0,0x0,0x0,0x0,0x0,0x0,
0x1a,0x0,0x0,0x0,0x65,0x0,0x78,0x0,
0x70,0x0,0x72,0x0,0x65,0x0,0x73,0x0,
0x73,0x0,0x69,0x0,0x6f,0x0,0x6e,0x0,
0x20,0x0,0x66,0x0,0x6f,0x0,0x72,0x0,
0x20,0x0,0x6e,0x0,0x61,0x0,0x6d,0x0,
0x65,0x0,0x46,0x0,0x69,0x0,0x6c,0x0,
0x74,0x0,0x65,0x0,0x72,0x0,0x73,0x0,
0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,
0x8,0x0,0x0,0x0,0x73,0x0,0x68,0x0,
0x6f,0x0,0x77,0x0,0x44,0x0,0x69,0x0,
0x72,0x0,0x73,0x0,0x0,0x0,0x0,0x0,
0xf,0x0,0x0,0x0,0x6f,0x0,0x6e,0x0,
0x53,0x0,0x74,0x0,0x61,0x0,0x74,0x0,
0x75,0x0,0x73,0x0,0x43,0x0,0x68,0x0,
0x61,0x0,0x6e,0x0,0x67,0x0,0x65,0x0,
0x64,0x0,0x0,0x0,0x0,0x0,0x0,0x0,
0x1e,0x0,0x0,0x0,0x65,0x0,0x78,0x0,
0x70,0x0,0x72,0x0,0x65,0x0,0x73,0x0,
0x73,0x0,0x69,0x0,0x6f,0x0,0x6e,0x0,
0x20,0x0,0x66,0x0,0x6f,0x0,0x72,0x0,
0x20,0x0,0x6f,0x0,0x6e,0x0,0x53,0x0,
0x74,0x0,0x61,0x0,0x74,0x0,0x75,0x0,
0x73,0x0,0x43,0x0,0x68,0x0,0x61,0x0,
0x6e,0x0,0x67,0x0,0x65,0x0,0x64,0x0,
0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,
0x2,0x0,0x0,0x0,0x51,0x0,0x74,0x0,
0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,
0xb,0x0,0x0,0x0,0x72,0x0,0x65,0x0,
0x73,0x0,0x6f,0x0,0x6c,0x0,0x76,0x0,
0x65,0x0,0x64,0x0,0x55,0x0,0x72,0x0,
0x6c,0x0,0x0,0x0,0x0,0x0,0x0,0x0,
0xe,0x0,0x0,0x0,0x2e,0x0,0x2e,0x0,
0x2f,0x0,0x2e,0x0,0x2e,0x0,0x2f,0x0,
0x63,0x0,0x6f,0x0,0x6e,0x0,0x74,0x0,
0x65,0x0,0x6e,0x0,0x74,0x0,0x2f,0x0,
0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,
0xf,0x0,0x0,0x0,0x63,0x0,0x72,0x0,
0x65,0x0,0x61,0x0,0x74,0x0,0x65,0x0,
0x51,0x0,0x6d,0x0,0x6c,0x0,0x4f,0x0,
0x62,0x0,0x6a,0x0,0x65,0x0,0x63,0x0,
0x74,0x0,0x0,0x0,0x0,0x0,0x0,0x0,
0x2b,0x0,0x0,0x0,0x69,0x0,0x6d,0x0,
0x70,0x0,0x6f,0x0,0x72,0x0,0x74,0x0,
0x20,0x0,0x51,0x0,0x74,0x0,0x51,0x0,
0x75,0x0,0x69,0x0,0x63,0x0,0x6b,0x0,
0x20,0x0,0x32,0x0,0x2e,0x0,0x31,0x0,
0x35,0x0,0x3b,0x0,0x20,0x0,0x46,0x0,
0x6f,0x0,0x6e,0x0,0x74,0x0,0x4c,0x0,
0x6f,0x0,0x61,0x0,0x64,0x0,0x65,0x0,
0x72,0x0,0x20,0x0,0x7b,0x0,0x20,0x0,
0x73,0x0,0x6f,0x0,0x75,0x0,0x72,0x0,
0x63,0x0,0x65,0x0,0x3a,0x0,0x20,0x0,
0x22,0x0,0x0,0x0,0x0,0x0,0x0,0x0,
0x4,0x0,0x0,0x0,0x22,0x0,0x3b,0x0,
0x20,0x0,0x7d,0x0,0x0,0x0,0x0,0x0,
0x11,0x0,0x0,0x0,0x64,0x0,0x79,0x0,
0x6e,0x0,0x61,0x0,0x6d,0x0,0x69,0x0,
0x63,0x0,0x46,0x0,0x6f,0x0,0x6e,0x0,
0x74,0x0,0x4c,0x0,0x6f,0x0,0x61,0x0,
0x64,0x0,0x65,0x0,0x72,0x0,0x0,0x0,
0x5,0x0,0x0,0x0,0x2a,0x0,0x2e,0x0,
0x74,0x0,0x74,0x0,0x66,0x0,0x0,0x0,
0x5,0x0,0x0,0x0,0x2a,0x0,0x2e,0x0,
0x6f,0x0,0x74,0x0,0x66,0x0,0x0,0x0,
0x6,0x0,0x0,0x0,0x73,0x0,0x74,0x0,
0x61,0x0,0x74,0x0,0x75,0x0,0x73,0x0,
0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,
0x5,0x0,0x0,0x0,0x52,0x0,0x65,0x0,
0x61,0x0,0x64,0x0,0x79,0x0,0x0,0x0,
0x5,0x0,0x0,0x0,0x63,0x0,0x6f,0x0,
0x75,0x0,0x6e,0x0,0x74,0x0,0x0,0x0,
0x3,0x0,0x0,0x0,0x67,0x0,0x65,0x0,
0x74,0x0,0x0,0x0,0x0,0x0,0x0,0x0,
0x7,0x0,0x0,0x0,0x66,0x0,0x69,0x0,
0x6c,0x0,0x65,0x0,0x55,0x0,0x52,0x0,
0x4c,0x0,0x0,0x0,0x0,0x0,0x0,0x0,
0x2,0x0,0x0,0x0,0x10,0x0,0x0,0x0,
0x2,0x0,0x0,0x0,0x38,0x0,0x0,0x0,
0x1,0x0,0x0,0x0,0x1,0x0,0x0,0x0,
0x0,0x0,0x0,0x0,0x4,0x0,0x10,0x0,
0x2,0x6,0x0,0x0,0x1,0x0,0x0,0x0,
0x2,0x0,0x0,0x0,0x0,0x0,0x0,0x0,
0x5,0x0,0x10,0x0,0x2,0x6,0x0,0x0,
0x40,0x0,0x0,0x0,0x8,0x1,0x0,0x0,
0x3,0x0,0x0,0x0,0x4,0x0,0x0,0x0,
0x0,0x0,0xff,0xff,0xff,0xff,0xff,0xff,
0x1,0x0,0x3,0x0,0x54,0x0,0x0,0x0,
0x58,0x0,0x0,0x0,0x7c,0x0,0x0,0x0,
0x0,0x0,0x0,0x0,0x7c,0x0,0x0,0x0,
0x7c,0x0,0x0,0x0,0x0,0x0,0x3,0x0,
0x7c,0x0,0x0,0x0,0x0,0x0,0x0,0x0,
0xc4,0x0,0x0,0x0,0x7,0x0,0x10,0x0,
0x8,0x0,0x50,0x0,0xc4,0x0,0x0,0x0,
0x0,0x0,0x0,0x0,0xc4,0x0,0x0,0x0,
0x0,0x0,0x0,0x0,0x1,0x0,0x0,0x0,
0x5,0x0,0x0,0x0,0x5,0x0,0x0,0x20,
0xa,0x0,0x50,0x0,0x7,0x0,0x0,0x0,
0x4,0x0,0x0,0x20,0xb,0x0,0x50,0x0,
0xc,0x0,0x0,0x0,0xb,0x0,0x0,0x0,
0x13,0x0,0x50,0x0,0xc,0x0,0x0,0x0,
0x0,0x0,0x8,0x0,0x1,0x0,0x0,0x0,
0x0,0x0,0x0,0x0,0x13,0x0,0xe0,0x1,
0x13,0x0,0xb0,0x2,0x7,0x0,0x0,0x0,
0x0,0x0,0x3,0x0,0x0,0x0,0x0,0x0,
0x8,0x0,0x0,0x0,0xb,0x0,0x50,0x1,
0xb,0x0,0xc0,0x2,0x5,0x0,0x0,0x0,
0x0,0x0,0x7,0x0,0x0,0x0,0x0,0x0,
0x0,0x0,0x0,0x0,0xa,0x0,0x20,0x1,
0xa,0x0,0x10,0x2,0x0,0x0,0x0,0x0,
0xb,0x0,0x0,0x0,0xc,0x0,0x0,0x0,
0x0,0x0,0xff,0xff,0xff,0xff,0xff,0xff,
0x0,0x0,0x0,0x0,0x54,0x0,0x0,0x0,
0x54,0x0,0x0,0x0,0x54,0x0,0x0,0x0,
0x0,0x0,0x0,0x0,0x54,0x0,0x0,0x0,
0x54,0x0,0x0,0x0,0x0,0x0,0x4,0x0,
0x54,0x0,0x0,0x0,0x0,0x0,0x0,0x0,
0xb4,0x0,0x0,0x0,0x13,0x0,0xb0,0x2,
0x14,0x0,0x90,0x0,0xb4,0x0,0x0,0x0,
0x0,0x0,0x0,0x0,0xb4,0x0,0x0,0x0,
0x0,0x0,0x0,0x0,0x12,0x0,0x0,0x0,
0x0,0x0,0x7,0x0,0x4,0x0,0x0,0x0,
0x0,0x0,0x0,0x0,0x19,0x0,0x90,0x0,
0x19,0x0,0xa0,0x1,0x11,0x0,0x0,0x0,
0x0,0x0,0x1,0x0,0x0,0x0,0x0,0x0,
0x0,0x0,0x0,0x0,0x17,0x0,0x90,0x0,
0x17,0x0,0x30,0x1,0xf,0x0,0x0,0x0,
0x0,0x0,0x7,0x0,0x3,0x0,0x0,0x0,
0x0,0x0,0x0,0x0,0x16,0x0,0x90,0x0,
0x16,0x0,0x60,0x1,0xd,0x0,0x0,0x0,
0x0,0x0,0x7,0x0,0x2,0x0,0x0,0x0,
0x0,0x0,0x0,0x0,0x15,0x0,0x90,0x0,
0x15,0x0,0x10,0x1,0x0,0x0,0x0,0x0
};
QT_WARNING_PUSH
QT_WARNING_DISABLE_MSVC(4573)

template <typename Binding>
void wrapCall(const QQmlPrivate::AOTCompiledContext *aotContext, void *dataPtr, void **argumentsPtr, Binding &&binding)
{
    using return_type = std::invoke_result_t<Binding, const QQmlPrivate::AOTCompiledContext *, void **>;
    if constexpr (std::is_same_v<return_type, void>) {
       Q_UNUSED(dataPtr)
       binding(aotContext, argumentsPtr);
    } else {
        if (dataPtr) {
           new (dataPtr) return_type(binding(aotContext, argumentsPtr));
        } else {
           binding(aotContext, argumentsPtr);
        }
    }
}
extern const QQmlPrivate::TypedFunction aotBuiltFunctions[];
extern const QQmlPrivate::TypedFunction aotBuiltFunctions[] = {
{ 0, QMetaType::fromType<QUrl>(), {  }, 
    [](const QQmlPrivate::AOTCompiledContext *aotContext, void *dataPtr, void **argumentsPtr) {
        wrapCall(aotContext, dataPtr, argumentsPtr, [](const QQmlPrivate::AOTCompiledContext *aotContext, void **argumentsPtr) {
Q_UNUSED(aotContext)
Q_UNUSED(argumentsPtr)
// expression for fontDirectory at line 10, column 5
QString r11_1;
QObject *r7_1;
QObject *r2_1;
QUrl r2_3;
QString r2_2;
QUrl r10_1;
// generate_LoadQmlContextPropertyLookup
while (!aotContext->loadSingletonLookup(0, &r2_1)) {
aotContext->setInstructionPointer(2);
aotContext->initLoadSingletonLookup(0, QQmlPrivate::AOTCompiledContext::InvalidStringId);
if (aotContext->engine->hasError())
    return QUrl();
}
// generate_StoreReg
r7_1 = r2_1;
// generate_LoadRuntimeString
r2_2 = QStringLiteral("../../content/");
// generate_StoreReg
r11_1 = r2_2;
// generate_LoadQmlContextPropertyLookup
while (!aotContext->loadScopeObjectPropertyLookup(1, &r2_2)) {
aotContext->setInstructionPointer(10);
aotContext->initLoadScopeObjectPropertyLookup(1, QMetaType::fromType<QString>());
if (aotContext->engine->hasError())
    return QUrl();
}
// generate_Add
r2_3 = QUrl((r11_1 + r2_2));
// generate_StoreReg
r10_1 = r2_3;
// generate_CallPropertyLookup
{
QUrl callResult;
void *args[] = { &callResult, &r10_1 };
const QMetaType types[] = { QMetaType::fromType<QUrl>(), QMetaType::fromType<QUrl>() };
while (!aotContext->callObjectPropertyLookup(2, r7_1, args, types, 1)) {
aotContext->setInstructionPointer(19);
aotContext->initCallObjectPropertyLookup(2);
if (aotContext->engine->hasError())
    return QUrl();
}
r2_3 = std::move(callResult);
}
// generate_Ret
return r2_3;
});}
 },{ 2, QMetaType::fromType<QUrl>(), {  }, 
    [](const QQmlPrivate::AOTCompiledContext *aotContext, void *dataPtr, void **argumentsPtr) {
        wrapCall(aotContext, dataPtr, argumentsPtr, [](const QQmlPrivate::AOTCompiledContext *aotContext, void **argumentsPtr) {
Q_UNUSED(aotContext)
Q_UNUSED(argumentsPtr)
// expression for folder at line 21, column 9
QUrl r2_2;
QObject *r2_1;
// generate_LoadQmlContextPropertyLookup
while (!aotContext->loadContextIdLookup(6, &r2_1)) {
aotContext->setInstructionPointer(2);
aotContext->initLoadContextIdLookup(6);
if (aotContext->engine->hasError())
    return QUrl();
}
// generate_GetLookup
while (!aotContext->getObjectLookup(7, r2_1, &r2_2)) {
aotContext->setInstructionPointer(4);
aotContext->initGetObjectLookup(7, r2_1, QMetaType::fromType<QUrl>());
if (aotContext->engine->hasError())
    return QUrl();
}
// generate_Ret
return r2_2;
});}
 },{ 3, QMetaType::fromType<QStringList>(), {  }, 
    [](const QQmlPrivate::AOTCompiledContext *aotContext, void *dataPtr, void **argumentsPtr) {
        wrapCall(aotContext, dataPtr, argumentsPtr, [](const QQmlPrivate::AOTCompiledContext *aotContext, void **argumentsPtr) {
Q_UNUSED(aotContext)
Q_UNUSED(argumentsPtr)
// expression for nameFilters at line 22, column 9
QString r7_1;
QString r8_1;
QStringList r2_2;
QString r2_1;
// generate_LoadRuntimeString
r2_1 = QStringLiteral("*.ttf");
// generate_StoreReg
r7_1 = r2_1;
// generate_LoadRuntimeString
r2_1 = QStringLiteral("*.otf");
// generate_StoreReg
r8_1 = r2_1;
// generate_DefineArray
r2_2 = QStringList{r7_1, r8_1};
// generate_Ret
return r2_2;
});}
 },{ 0, QMetaType::fromType<void>(), {}, nullptr }};
QT_WARNING_POP
}
}
