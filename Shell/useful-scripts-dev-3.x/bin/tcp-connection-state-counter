#!/usr/bin/env bash
# @Function
# show count of tcp connection stat.
#
# @Usage
#   $ ./tcp-connection-state-counter
#
# @online-doc https://github.com/oldratlee/useful-scripts/blob/dev-3.x/docs/shell.md#-tcp-connection-state-counter
# @author Jerry Lee (oldratlee at gmail dot com)
# @author @sunuslee (sunuslee at gmail dot com)
set -eEuo pipefail

readonly PROG=${0##*/}
readonly PROG_VERSION='3.x-dev'

################################################################################
# parse options
################################################################################

usage() {
  cat <<EOF
Usage: $PROG [OPTION]...
show count of tcp connection stat.

Example:
    $PROG

Options:
    -h, --help      display this help and exit
    -V, --version   display version information and exit
EOF

  exit
}

progVersion() {
  printf '%s\n' "$PROG $PROG_VERSION"
  exit
}

args=("$@")
# check arguments in reverse, so last option wins.
for ((idx = $# - 1; idx >= 0; --idx)); do
  [[ "${args[idx]}" = -h || "${args[idx]}" = --help ]] && usage
  [[ "${args[idx]}" = -V || "${args[idx]}" = --version ]] && progVersion
done
unset args idx

################################################################################
# biz logic
################################################################################

# On MacOS, netstat need to using -p tcp to get only tcp output.
UNAME=$(uname)
[[ $UNAME = Darwin* ]] && option_for_mac=-ptcp

# shellcheck disable=SC2086
netstat -tna ${option_for_mac:-} | awk 'NR > 2 {
    ++s[$NF]
}

END {
    # get max length of stat and count
    for(v in s) {
        stat_len = length(v)
        if(stat_len > max_stat_len) max_stat_len = stat_len

        count_len = length(s[v])
        if (count_len > max_count_len) max_count_len = count_len
    }

    for(v in s) {
        printf "%-" max_stat_len "s %" max_count_len "s\n", v, s[v]
    }
}' | sort -nr -k2,2
